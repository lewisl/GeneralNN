Some MNIST outcomes

general_nn("digits5000by784.mat",1500,190,.3 ,500, 0.07);
Fraction correct labels predicted training: 0.992
Final cost training: 0.13278263746600893
Fraction correct labels predicted test: 0.931
Final cost test: 0.16339297383768014

general_nn("digits5000by784.mat", 1500, 190,.3, 500, .07);
Fraction correct labels predicted training: 1.0
Final cost training: 0.05618060065676693
Fraction correct labels predicted test: 0.941
Final cost test: 0.14601174228898248

general_nn("digits10000by784.mat",500, 220,.3 ,500, 0.08);
Fraction correct labels predicted training: 0.9998
Final cost training: 0.09019935797864428
Fraction correct labels predicted test: 0.9426
Final cost test: 0.16959406200226584

@time general_nn("digits5000by784.mat",800,190,.28, 500,.08);
Fraction correct labels predicted training: 0.9998
Final cost training: 0.1382246373043908
Fraction correct labels predicted test: 0.932
Final cost test: 0.18450344670371252
138.437173 seconds (2.32 M allocations: 162.762 GB, 11.52% gc time)


###################################################################
#
# Changed code and calculations for regularization
#
###################################################################

@time general_nn("digits5000by784.mat", 400, 190, .35, 500, .038, "softmax", true);
Plotting all of the costs is slower. Proceeding.
Fraction correct labels predicted training: 0.9942
Final cost training: 0.1258004936541531
Fraction correct labels predicted test: 0.9135
Final cost test: 0.6527596339113823
129.239747 seconds (1.46 M allocations: 123.526 GB, 11.85% gc time)

@time general_nn("digits5000by784.mat", 250, 220, .3, 500, .015, "softmax", true);
Plotting all of the costs is slower. Proceeding.
Fraction correct labels predicted training: 0.9932
Final cost training: 0.11561339955559752
Fraction correct labels predicted test: 0.907
Final cost test: 0.6107635788933432
 92.910573 seconds (965.27 k allocations: 85.762 GB, 13.39% gc time)

general_nn("digits5000by784.mat",250,220,.33, 500,.028, "softmax", ["Training","Test"]);
Fraction correct labels predicted training: 0.9852
Final cost training: 0.164994101842657
Fraction correct labels predicted test: 0.91
Final cost test: 0.6417955157219688

general_nn("digits5000by784.mat", 500, 220,.33, 500,.0385, "softmax", ["Training","Test"]);
Fraction correct labels predicted training: 0.998
Final cost training: 0.11230400325042149
Fraction correct labels predicted test: 0.9205
Final cost test: 0.6426140867833313

train_nn("digits5000by784.mat", 200, 200,0.35,500)
Fraction correct labels predicted training: 0.9682
Final cost training: 0.23089017939732645
Fraction correct labels predicted test: 0.9165
Final cost test: 0.5494589077336298

train_nn("digits5000by784.mat", 500, 200,alpha=0.35,mb_size=500,lambda=.05)
Fraction correct labels predicted training: 0.9968
Final cost training: 0.12550122086785528
Fraction correct labels predicted test: 0.92
Final cost test: 0.698622648722577

train_nn("digits5000by784.mat", 800, 180,alpha=0.4,mb_size=500,lambda=.04)
Fraction correct labels predicted training: 0.997
Final cost training: 0.10794086623438941
Fraction correct labels predicted test: 0.9145
Final cost test: 0.7157171288672539

train_nn("digits5000by784.mat",800,200,mb_size=500,classify="softmax")
Fraction correct labels predicted training: 0.998
Final cost training: 0.06707120566510721
Fraction correct labels predicted test: 0.9095
Final cost test: 0.647869907621593

train_nn("digits5000by784.mat",500,220,mb_size=500,alpha=0.3,lambda=.02,classify="softmax")
Fraction correct labels predicted training: 0.9976
Final cost training: 0.08240894729118192
Fraction correct labels predicted test: 0.9015
Final cost test: 0.6851602923158253

train_nn("digits5000by784.mat",800,220,mb_size=500,alpha=0.3,lambda=.02,classify="softmax")
Fraction correct labels predicted training: 0.9994
Final cost training: 0.07196937748699399
Fraction correct labels predicted test: 0.9025
Final cost test: 0.700173737532207

###################################################################
#
# Changed sign of regularization term
#
###################################################################

train_nn("digits5000by784.mat",500,220,mb_size=500,alpha=0.3, lambda=.08)
Fraction correct labels predicted training: 0.9974
Final cost training: 0.16891528613210907
Fraction correct labels predicted test: 0.9105
Final cost test: 0.8465342132370346

train_nn("digits5000by784.mat",500,300,mb_size=500,alpha=0.4, lambda=.08)
Fraction correct labels predicted training: 1.0
Final cost training: 0.19516051204377227
Fraction correct labels predicted test: 0.9165
Final cost test: 0.9638865248119268

###################################################################
#
# Added batch normalized leaky ReLU units
#
###################################################################

train_nn("digits5000by784.mat",60,[200,40],mb_size=500,alpha=0.3, lambda=0.02,plots=["Training","Test"], units="relu")
Fraction correct labels predicted training: 0.9784
Final cost training: 0.1788440560877504
Fraction correct labels predicted test: 0.9315
Final cost test: 0.39242707805561966

train_nn("digits5000by784.mat",100,300,mb_size=500,alpha=0.3, lambda=0.02,plots=["Test","Training", "Learning"], units="relu", classify="softmax")
Fraction correct labels predicted training: 0.9854
Final cost training: 0.1326467707770969
Fraction correct labels predicted test: 0.9375
Final cost test: 0.40642530987586145

train_nn("digits5000by784.mat",100,400,mb_size=500,alpha=0.3, lambda=0.02,plots=["Test","Training", "Learning"], units="relu", classify="softmax")
Fraction correct labels predicted training: 0.9862
Final cost training: 0.12160350819144027
Fraction correct labels predicted test: 0.9405
Final cost test: 0.40771554175971675

train_nn("digits5000by784.mat",100,[600,60], mb_size=500,alpha=0.3, lambda=0.02,plots=["Test","Training", "Learning"], units="relu", classify="softmax")
Fraction correct labels predicted training: 0.997
Final cost training: 0.07179730142524446
Fraction correct labels predicted test: 0.946
Final cost test: 0.3524875664183936

# interesting because learning progress nearly identical across train/test
train_nn("digits5000by784.mat",100,[60,60,60], mb_size=500,alpha=0.1, lambda=0.3,plots=["Test","Training", "Learning"], units="relu", classify="softmax")

Fraction correct labels predicted training: 0.9536
Final cost training: 0.3127951341669351
Fraction correct labels predicted test: 0.9255
Final cost test: 0.4837307313706933

# Generally going to get better results with more data
train_nn("digitsallby784.mat",40,[400], mb_size=500,alpha=0.3, lambda=0.02, plots=["Test","Training", "Learning"], units="relu", classify="softmax")
elapsed time: 359.139062168 seconds
Running time for cpu: 359.139062168
Fraction correct labels predicted training: 0.9797333333333333
Final cost training: 0.12728224361472595
Fraction correct labels predicted test: 0.9699
Final cost test: 0.17513454436273126

train_nn("digitsallby784.mat",40,[100,80], mb_size=500,alpha=0.3, lambda=0.02, plots=["Test","Training", "Learning"], units="relu", classify="softmax")
elapsed time: 335.212455081 seconds
Fraction correct labels predicted training: 0.9864833333333334
Final cost training: 0.09364594451738374
Fraction correct labels predicted test: 0.9715
Final cost test: 0.16333858272090343

train_nn("digitsallby784.mat",60,[200,150,100], mb_size=500,alpha=0.2, lambda=0.2, plots=["Test","Training", "Learning"], units="relu", classify="softmax")
elapsed time: 661.591880408 seconds
Fraction correct labels predicted training: 0.9895166666666667
Final cost training: 0.06830129488989665
Fraction correct labels predicted test: 0.9756
Final cost test: 0.1496112307568038

train_nn("digitsallby784.mat",100,[300], mb_size=500,alpha=0.25, lambda=0.2, plots=["Test","Training", "Learning"], units="relu", classify="softmax")
elapsed time: 284.914058149 seconds
Fraction correct labels predicted training: 0.9919833333333333
Final cost training: 0.06087035229945476
Fraction correct labels predicted test: 0.972
Final cost test: 0.16768374727898994

train_nn("digitsallby784.mat",100,[300], mb_size=500,alpha=0.25, lambda=0.2, plots=["Test","Training", "Learning"], units="sigmoid", classify="softmax")
elapsed time: 332.5645013 seconds
Fraction correct labels predicted training: 0.9706333333333333
Final cost training: 0.16959709325555233
Fraction correct labels predicted test: 0.9575
Final cost test: 0.24665895255185644

train_nn("digitsallby784.mat",100,[300,300,300], mb_size=500,alpha=0.2, lambda=0.3, plots=["Test","Training", "Learning"], units="relu", classify="softmax")
elapsed time: 697.888814827 seconds
Fraction correct labels predicted training: 0.97465
Final cost training: 0.15301949125411304
Fraction correct labels predicted test: 0.9651
Final cost test: 0.20521796241879303

## best to date
train_nn("digitsallby784.mat",100,[600,300], mb_size=500,alpha=0.2, lambda=0.3, plots=["Test","Training", "Learning"], units="relu", classify="softmax")
elapsed time: 840.329659171 seconds
Fraction correct labels predicted training: 0.9934666666666667
Final cost training: 0.04881191677001406
Fraction correct labels predicted test: 0.9769
Final cost test: 0.14123801688389284

train_nn("digitsallby784.mat",100,[600,300,150], mb_size=500,alpha=0.2, lambda=0.3, plots=["Test","Training", "Learning"], units="relu", classify="softmax")
elapsed time: 1173.420634332 seconds
Fraction correct labels predicted training: 0.9931
Final cost training: 0.04677884419175935
Fraction correct labels predicted test: 0.9749
Final cost test: 0.15658995949430218

train_nn("digits60000by784.mat",120,[1000,500], mb_size=1000,alpha=0.15, lambda=0.4, plots=["Test","Training", "Learning"], units="relu", classify="softmax")
elapsed time: 1937.173343117 seconds
Fraction correct labels predicted training: 0.9883666666666666
Final cost training: 0.08092666827431647
Accuracy improvement in final 10 iterations:
0.9767 : 0.9766 : 0.9768 : 0.9767 : 0.9766 : 0.9764 : 0.9766 : 0.9766 : 0.9766 : 0.9765 : 
Fraction correct labels predicted test: 0.9765
Final cost test: 0.14480926350965032